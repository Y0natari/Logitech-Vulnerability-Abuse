#pragma once
#include <Windows.h>
#include <winternl.h>
#include <chrono>
#include <iomanip>
#include <cstdio>
#include <array>
#pragma comment(lib, "ntdll.lib")

class Mouse {
private:
    struct MOUSE_IO {
        char button;
        char x;
        char y;
        char wheel;
        char unk1; // idk why we need that, but it doesnt work without it
    };

    class HandleWrapper {
    public:
        HandleWrapper();
        ~HandleWrapper();
        operator HANDLE() const;
        HANDLE* operator&();
        bool IsValid() const;
        HandleWrapper& operator=(HANDLE other);
    private:
        HANDLE handle_;
    };

    HandleWrapper input_; // Wrapper for the mouse handle
    IO_STATUS_BLOCK io_;  // IO status block for device communication
    bool found_mouse_;    // Flag to indicate if a mouse device was found

    bool CallMouse(MOUSE_IO* buffer); // Calls the mouse device
    NTSTATUS DeviceInitialize(PCWSTR device_name); // Initializes the mouse device

public:
    Mouse();
    bool Open();
    void Close();
    void Move(char button, char x, char y, char wheel); // Move mouse function
};
